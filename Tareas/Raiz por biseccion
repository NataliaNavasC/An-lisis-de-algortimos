
biseccion = function(f, xa, xb, tol)
{
  if( sign(f(xa)) == sign(f(xb)) ){ stop("f(xa) y f(xb) tienen el mismo signo") 
}

# a = min(xa,xb)
# b = max(xa,xb)
a = xa; b = xb
k = 0
cont = 0
dx = 0
listaErrorRel = c()
listaIteraciones = c()

#Par imprimir estado
cat("----------------------------------------------------------\n")
cat(formatC( c("a","b","m","Error est.","Error ant.", "Error relativo."), width = -15, format = "f", flag = " "), "\n")
cat("----------------------------------------------------------\n")

repeat
{
  cont = cont + 1
  listaIteraciones = c(listaIteraciones, cont)
  m = a + 0.5*(b-a)
  if( f(m)==0 )
  { 
    cat("Cero de f en [",xa,",",xb,"] es: ", m ) 
  }
  if( sign(f(a)) != sign(f(m)) )
  {
    b = m
  } else { a = m }
  rAnterior = dx
  dx = (b-a)/2
  eRelativo = abs(dx-rAnterior)
  
#Aquí se inserta el error relativo en la lista 
  listaErrorRel = c(listaErrorRel , eRelativo)
  #cat( cont," -> " ,eRelativo  , "\n")
  #cat(formatC(eRelativo, digits=7, width = -15, format = "f", flag = " "), "\n\n")
  
# imprimir estado
  cat(formatC( c(a,b,m,dx,rAnterior,eRelativo), digits=7, width = -15, format = "f", flag = " "), "\n")
  k = k+1
    
#until
  if( dx < tol )
  {
    cat("----------------------------------------------------------\n\n")
    cat("Cero de f en [",xa,",",xb,"] es approx: ", m, "con error <=", dx, " El numero de iteraciones es: ", cont)
    break;
  }
} #repeat
points(listaIteraciones, listaErrorRel, col = "red")
# Imprimiendo la lista de los errores 
#for(elem in listaErrorRel)
#{
#  print(elem)
#}


}
## Pruebas
f = function(x) ((x^3)+(5*x)-1)
#curve(f, -2,30, col ="red"); abline(h=0, v=0) #gráfico para decidir un intervalo
plot(f, xlim=c(0,27), ylim=c(0,0.3), col = "white")
abline(h=0,col="blue")
biseccion(f, 0, 1, 0.00000001)


